{
  "hash": "38cddfcf766fdb711f3c7b5ffe2265df",
  "result": {
    "markdown": "---\ntitle: \"Mapping Aviation Data\" \nauthor: \"Sam Weiner\" \ndate: \"1/18/2023\"\nimage: aviators.png\ncategories: [maps, rstats, api]\neditor: visual \ntoc: true \ntoc-depth: 4\nnumber-sections: true\nhighlight-style: pygments\nformat: \n  html: \n    code-link: true\n    df-print: default\nfig-width: 6\nfig-asp: 0.618\n---\n\n\n# Visualizing Data From API's\n\nHello and welcome back to Dialectic with Data! In this installment, I am going to be working with data from the [AviationStack API](https://aviationstack.com/). This API can let us retrieve real time flight data from all over the world, and I thought that it would be interesting to visualize the flights that are currently on their way to a specific airport.\n\nTo recreate this project yourself, you can sign up for a free account with AviationStack [here](https://aviationstack.com/product). The free account lets us make 100 api calls a month which is really awesome!\n\nFor this project, I am going to be working in R, which has a great package for working with api calls, [httr](https://httr.r-lib.org/). This package lets us easily assemble queries.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(lubridate)\nlibrary(airportr)\nlibrary(gt)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## API Keys\n\nThe first step for working with APIs is to get our API key into our R session. Generally, it is not a very good practice to have our API key written out in our code. The key is liable to get stolen and abused, and that is something that we want to prevent. If you plan on using the API key a lot, you might want to add it to your .Renviron file. Doing this is very simple and generally safe.\n\nTo get to your .Renviron file, go to the console and run this code `usethis::get_r_environ()`. Your .Renviron should pop up and then you can add a line like this: `aviation_api = {your_key_here}`. Now, whenever you want to retrieve you API key, call `Sys.getenv(\"aviation_api\")` and your API key will appear.\n\nIf you only plan on using your API key a couple of times, however, Rstudio has a function that you can use to manually add your API key each time you want to add it to your R environment. Run `rstudioapi::askForPassword()` and an interactive window will pop up where you can put your key. Just remember to save it to a variable!\n\n``` r\napi <- rstudioapi::askForPassword()\n```\n\n## API Calls\n\nFor this project, I am going to be working in R, which has a great package for working with API calls, [httr](https://httr.r-lib.org/). This package lets us easily assemble queries.\n\nTo make a call from the API, we are going to use `httr::GET()`. To construct the call, we put the base URL as a string in the function. Then, in the query parameter, we write a named list using the different parameters we have to or want to add to the call. `access_key` is where we put our API key and this is a necessary parameter. `arr_iata` is an optional parameter which is used to get us the information that we want, but it is not necessary to have a successful API call. You can find out more about the different parameters in the [AviationStack documentation](https://aviationstack.com/documentation).\n\nIn this API call, we are using the real-time flights API endpoint, and we are saying that we want to see flights that are going to be arriving at JFK airport.\n\n[If you are unfamiliar with the term \"IATA\", have no fear! IATA codes are a global standard of references for airports all around the world. They are really easy to find and almost every airport has one.]{.aside}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- httr::GET(\"http://api.aviationstack.com/v1/flights\", \n               query = list(access_key = api, arr_iata = \"JFK\"))\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nOnce our call has been completed, we are going to get back something called a response object. This object contains all the information that we requested. When we run the object in the console, we get some summary information like the full URL of the call (including the API key which is why I'm not showing the output), the time of the call, the size of the request in kB, and the status code.\n\nThe status code is an important piece of information to look for when working with APIs. A status code of 200 is good. That means everything worked fine and we have our data! A status code of anything else means that we do not have our data, and the reasons could be many. For more information on what other status codes mean, I turn you to the [HTTP Status Cats](https://www.flickr.com/photos/girliemac/sets/72157628409467125) for guidance.\n\nSo to retrieve the status of our API call, we run `httr::status_code(r)` and, luckily for us, our request went through without a hitch! (Though this was not always the case when I was writing this article 😥)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhttr::status_code(r)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 200\n```\n:::\n:::\n\n\n## Working with the Data\n\nTo retrieve the contents of our call, we run `httr::content(r)` on our response object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights <- httr::content(r)\n```\n:::\n\n\n`flights` is a large list with two main components. `pagination` and `data`. We are most interested in what's contained inside `data`. [`pagination` contains some descriptive information about the call that we can't do anything with.]{.aside}\n\nLet's take a look at what's inside `data` using the `str` function. The `max.level` option makes the output a little easier to read.\n\nAs we can see, data contains lists too! Namely, there are lists called flight date and flight status which each contain one value. Also there are lists called departure, arrival, airline and flight which contain a lot of value and even more lists!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(flights$data[[1]], max.level = 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 8\n $ flight_date  : chr \"2023-01-19\"\n $ flight_status: chr \"scheduled\"\n $ departure    :List of 12\n  ..$ airport         : chr \"Hong Kong International\"\n  ..$ timezone        : chr \"Asia/Hong_Kong\"\n  ..$ iata            : chr \"HKG\"\n  ..$ icao            : chr \"VHHH\"\n  ..$ terminal        : chr \"1\"\n  ..$ gate            : NULL\n  ..$ delay           : NULL\n  ..$ scheduled       : chr \"2023-01-19T03:20:00+00:00\"\n  ..$ estimated       : chr \"2023-01-19T03:20:00+00:00\"\n  ..$ actual          : NULL\n  ..$ estimated_runway: NULL\n  ..$ actual_runway   : NULL\n $ arrival      :List of 13\n  ..$ airport         : chr \"John F Kennedy International\"\n  ..$ timezone        : chr \"America/New_York\"\n  ..$ iata            : chr \"JFK\"\n  ..$ icao            : chr \"KJFK\"\n  ..$ terminal        : chr \"8\"\n  ..$ gate            : NULL\n  ..$ baggage         : NULL\n  ..$ delay           : NULL\n  ..$ scheduled       : chr \"2023-01-19T06:00:00+00:00\"\n  ..$ estimated       : chr \"2023-01-19T06:00:00+00:00\"\n  ..$ actual          : NULL\n  ..$ estimated_runway: NULL\n  ..$ actual_runway   : NULL\n $ airline      :List of 3\n  ..$ name: chr \"Malaysia Airlines\"\n  ..$ iata: chr \"MH\"\n  ..$ icao: chr \"MAS\"\n $ flight       :List of 4\n  ..$ number    : chr \"9210\"\n  ..$ iata      : chr \"MH9210\"\n  ..$ icao      : chr \"MAS9210\"\n  ..$ codeshared:List of 6\n  .. ..$ airline_name : chr \"cathay pacific\"\n  .. ..$ airline_iata : chr \"cx\"\n  .. ..$ airline_icao : chr \"cpa\"\n  .. ..$ flight_number: chr \"844\"\n  .. ..$ flight_iata  : chr \"cx844\"\n  .. ..$ flight_icao  : chr \"cpa844\"\n $ aircraft     : NULL\n $ live         : NULL\n```\n:::\n:::\n\n\nTo get this data in a nice to read format, how about we turn it into a data frame?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_flight <- tibble(data = flights$data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_flight |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n  data            \n  <list>          \n1 <named list [8]>\n2 <named list [8]>\n3 <named list [8]>\n4 <named list [8]>\n5 <named list [8]>\n6 <named list [8]>\n```\n:::\n:::\n\n\nOK, that's not nice to read.\n\nThe issue is that the data is still in a list. We have to get the information out of a list find a way to make it look like a data frame with columns and rows. There is a package in R called, [tidyr](https://tidyr.tidyverse.org/) (which is included in the tidyverse), that will be able to help us. tidyr is full of functions that will help us \"rectangle\" our data. The function we will be using is `unnest_wider()`. Let's see how it works.\n\nTo use `unnest_wider()`, we first have to turn our list into a data frame which we did with `tibble()` above. Next, we pipe the data frame to `unnest_wider()` and tell it what column we want it to work on. In this case we only have one called `data`. After we run the code, we something a lot bigger. Actually, the number of rows are the same, but the columns are now equivalent to the number of items that `flights$data` contains. And each column name corresponds to the name of that item. However, we can see that a lot of the columns still contains lists.\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code}\ndata_flight |> \n  tidyr::unnest_wider(data) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  flight_d…¹ fligh…² departure    arrival      airline      flight       aircr…³\n  <chr>      <chr>   <list>       <list>       <list>       <list>       <list> \n1 2023-01-19 schedu… <named list> <named list> <named list> <named list> <NULL> \n2 2023-01-19 schedu… <named list> <named list> <named list> <named list> <NULL> \n3 2023-01-18 active  <named list> <named list> <named list> <named list> <NULL> \n4 2023-01-18 active  <named list> <named list> <named list> <named list> <NULL> \n5 2023-01-18 schedu… <named list> <named list> <named list> <named list> <NULL> \n6 2023-01-18 schedu… <named list> <named list> <named list> <named list> <NULL> \n# … with 1 more variable: live <list>, and abbreviated variable names\n#   ¹​flight_date, ²​flight_status, ³​aircraft\n```\n:::\n:::\n\n\nHowever, we can see that a lot of the columns still contains lists. No problem. We can easily take care of that with another call to `unnest_wider()`. If we string together two calls to the function, we can get to the information in the lists under departure. Now our data frame is a lot bigger.\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code}\ndata_flight |> \n  tidyr::unnest_wider(data) |> \n  tidyr::unnest_wider(departure, names_sep = \"_\") |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 19\n  flight_date flight_s…¹ depar…² depar…³ depar…⁴ depar…⁵ depar…⁶ depar…⁷ depar…⁸\n  <chr>       <chr>      <chr>   <chr>   <chr>   <chr>   <chr>   <chr>     <int>\n1 2023-01-19  scheduled  Hong K… Asia/H… HKG     VHHH    1       <NA>         NA\n2 2023-01-19  scheduled  Hong K… Asia/H… HKG     VHHH    1       <NA>         NA\n3 2023-01-18  active     Ronald… Americ… DCA     KDCA    2       B15          NA\n4 2023-01-18  active     Pittsb… Americ… PIT     KPIT    <NA>    B37          NA\n5 2023-01-18  scheduled  Luis M… Americ… SJU     TJSJ    A       5             3\n6 2023-01-18  scheduled  Charle… Americ… CHS     KCHS    <NA>    B8           34\n# … with 10 more variables: departure_scheduled <chr>,\n#   departure_estimated <chr>, departure_actual <chr>,\n#   departure_estimated_runway <chr>, departure_actual_runway <chr>,\n#   arrival <list>, airline <list>, flight <list>, aircraft <list>,\n#   live <list>, and abbreviated variable names ¹​flight_status,\n#   ²​departure_airport, ³​departure_timezone, ⁴​departure_iata, ⁵​departure_icao,\n#   ⁶​departure_terminal, ⁷​departure_gate, ⁸​departure_delay\n```\n:::\n:::\n\n\nWe can string together as many calls to `unnest_wider()` as we need until we get the output that we are looking for. We can remove the columns that end with \"codeshared\" as we won't be utilizing that information.\n\nWe are saving the output as a data frame names `tb_flight`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntb_flight <- data_flight |> \n  tidyr::unnest_wider(data) |> \n  tidyr::unnest_wider(departure, names_sep = \"_\") |> \n  tidyr::unnest_wider(arrival, names_sep = \"_\") |> \n  tidyr::unnest_wider(airline, names_sep = \"_\") |> \n  tidyr::unnest_wider(flight, names_sep = \"_\") |> \n  select(-ends_with(c(\"codeshared\")))\n```\n:::\n\n\nHere is what our final data frame looks like.\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code}\ntb_flight |>\n  head() |> \n  gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"bxhkobimfg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#bxhkobimfg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#bxhkobimfg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bxhkobimfg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bxhkobimfg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bxhkobimfg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bxhkobimfg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bxhkobimfg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bxhkobimfg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bxhkobimfg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#bxhkobimfg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bxhkobimfg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bxhkobimfg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bxhkobimfg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bxhkobimfg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bxhkobimfg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#bxhkobimfg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#bxhkobimfg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bxhkobimfg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#bxhkobimfg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bxhkobimfg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bxhkobimfg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bxhkobimfg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bxhkobimfg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bxhkobimfg .gt_left {\n  text-align: left;\n}\n\n#bxhkobimfg .gt_center {\n  text-align: center;\n}\n\n#bxhkobimfg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bxhkobimfg .gt_font_normal {\n  font-weight: normal;\n}\n\n#bxhkobimfg .gt_font_bold {\n  font-weight: bold;\n}\n\n#bxhkobimfg .gt_font_italic {\n  font-style: italic;\n}\n\n#bxhkobimfg .gt_super {\n  font-size: 65%;\n}\n\n#bxhkobimfg .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#bxhkobimfg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#bxhkobimfg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#bxhkobimfg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#bxhkobimfg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#bxhkobimfg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#bxhkobimfg .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"flight_date\">flight_date</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"flight_status\">flight_status</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_airport\">departure_airport</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_timezone\">departure_timezone</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_iata\">departure_iata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_icao\">departure_icao</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_terminal\">departure_terminal</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_gate\">departure_gate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_delay\">departure_delay</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_scheduled\">departure_scheduled</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_estimated\">departure_estimated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_actual\">departure_actual</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_estimated_runway\">departure_estimated_runway</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"departure_actual_runway\">departure_actual_runway</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_airport\">arrival_airport</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_timezone\">arrival_timezone</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_iata\">arrival_iata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_icao\">arrival_icao</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_terminal\">arrival_terminal</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_gate\">arrival_gate</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_baggage\">arrival_baggage</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_delay\">arrival_delay</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_scheduled\">arrival_scheduled</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_estimated\">arrival_estimated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_actual\">arrival_actual</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_estimated_runway\">arrival_estimated_runway</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"arrival_actual_runway\">arrival_actual_runway</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"airline_name\">airline_name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"airline_iata\">airline_iata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"airline_icao\">airline_icao</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"flight_number\">flight_number</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"flight_iata\">flight_iata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"flight_icao\">flight_icao</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"aircraft\">aircraft</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"live\">live</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"flight_date\" class=\"gt_row gt_right\">2023-01-19</td>\n<td headers=\"flight_status\" class=\"gt_row gt_left\">scheduled</td>\n<td headers=\"departure_airport\" class=\"gt_row gt_left\">Hong Kong International</td>\n<td headers=\"departure_timezone\" class=\"gt_row gt_left\">Asia/Hong_Kong</td>\n<td headers=\"departure_iata\" class=\"gt_row gt_left\">HKG</td>\n<td headers=\"departure_icao\" class=\"gt_row gt_left\">VHHH</td>\n<td headers=\"departure_terminal\" class=\"gt_row gt_left\">1</td>\n<td headers=\"departure_gate\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_delay\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"departure_scheduled\" class=\"gt_row gt_left\">2023-01-19T03:20:00+00:00</td>\n<td headers=\"departure_estimated\" class=\"gt_row gt_left\">2023-01-19T03:20:00+00:00</td>\n<td headers=\"departure_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_airport\" class=\"gt_row gt_left\">John F Kennedy International</td>\n<td headers=\"arrival_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"arrival_iata\" class=\"gt_row gt_left\">JFK</td>\n<td headers=\"arrival_icao\" class=\"gt_row gt_left\">KJFK</td>\n<td headers=\"arrival_terminal\" class=\"gt_row gt_right\">8</td>\n<td headers=\"arrival_gate\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_baggage\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"arrival_delay\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"arrival_scheduled\" class=\"gt_row gt_left\">2023-01-19T06:00:00+00:00</td>\n<td headers=\"arrival_estimated\" class=\"gt_row gt_left\">2023-01-19T06:00:00+00:00</td>\n<td headers=\"arrival_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"airline_name\" class=\"gt_row gt_left\">Malaysia Airlines</td>\n<td headers=\"airline_iata\" class=\"gt_row gt_left\">MH</td>\n<td headers=\"airline_icao\" class=\"gt_row gt_left\">MAS</td>\n<td headers=\"flight_number\" class=\"gt_row gt_right\">9210</td>\n<td headers=\"flight_iata\" class=\"gt_row gt_left\">MH9210</td>\n<td headers=\"flight_icao\" class=\"gt_row gt_left\">MAS9210</td>\n<td headers=\"aircraft\" class=\"gt_row gt_center\"></td>\n<td headers=\"live\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"flight_date\" class=\"gt_row gt_right\">2023-01-19</td>\n<td headers=\"flight_status\" class=\"gt_row gt_left\">scheduled</td>\n<td headers=\"departure_airport\" class=\"gt_row gt_left\">Hong Kong International</td>\n<td headers=\"departure_timezone\" class=\"gt_row gt_left\">Asia/Hong_Kong</td>\n<td headers=\"departure_iata\" class=\"gt_row gt_left\">HKG</td>\n<td headers=\"departure_icao\" class=\"gt_row gt_left\">VHHH</td>\n<td headers=\"departure_terminal\" class=\"gt_row gt_left\">1</td>\n<td headers=\"departure_gate\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_delay\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"departure_scheduled\" class=\"gt_row gt_left\">2023-01-19T03:20:00+00:00</td>\n<td headers=\"departure_estimated\" class=\"gt_row gt_left\">2023-01-19T03:20:00+00:00</td>\n<td headers=\"departure_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_airport\" class=\"gt_row gt_left\">John F Kennedy International</td>\n<td headers=\"arrival_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"arrival_iata\" class=\"gt_row gt_left\">JFK</td>\n<td headers=\"arrival_icao\" class=\"gt_row gt_left\">KJFK</td>\n<td headers=\"arrival_terminal\" class=\"gt_row gt_right\">8</td>\n<td headers=\"arrival_gate\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_baggage\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"arrival_delay\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"arrival_scheduled\" class=\"gt_row gt_left\">2023-01-19T06:00:00+00:00</td>\n<td headers=\"arrival_estimated\" class=\"gt_row gt_left\">2023-01-19T06:00:00+00:00</td>\n<td headers=\"arrival_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"airline_name\" class=\"gt_row gt_left\">Cathay Pacific</td>\n<td headers=\"airline_iata\" class=\"gt_row gt_left\">CX</td>\n<td headers=\"airline_icao\" class=\"gt_row gt_left\">CPA</td>\n<td headers=\"flight_number\" class=\"gt_row gt_right\">844</td>\n<td headers=\"flight_iata\" class=\"gt_row gt_left\">CX844</td>\n<td headers=\"flight_icao\" class=\"gt_row gt_left\">CPA844</td>\n<td headers=\"aircraft\" class=\"gt_row gt_center\"></td>\n<td headers=\"live\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"flight_date\" class=\"gt_row gt_right\">2023-01-18</td>\n<td headers=\"flight_status\" class=\"gt_row gt_left\">active</td>\n<td headers=\"departure_airport\" class=\"gt_row gt_left\">Ronald Reagan Washington National Airport</td>\n<td headers=\"departure_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"departure_iata\" class=\"gt_row gt_left\">DCA</td>\n<td headers=\"departure_icao\" class=\"gt_row gt_left\">KDCA</td>\n<td headers=\"departure_terminal\" class=\"gt_row gt_left\">2</td>\n<td headers=\"departure_gate\" class=\"gt_row gt_left\">B15</td>\n<td headers=\"departure_delay\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"departure_scheduled\" class=\"gt_row gt_left\">2023-01-18T06:10:00+00:00</td>\n<td headers=\"departure_estimated\" class=\"gt_row gt_left\">2023-01-18T06:10:00+00:00</td>\n<td headers=\"departure_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_airport\" class=\"gt_row gt_left\">John F Kennedy International</td>\n<td headers=\"arrival_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"arrival_iata\" class=\"gt_row gt_left\">JFK</td>\n<td headers=\"arrival_icao\" class=\"gt_row gt_left\">KJFK</td>\n<td headers=\"arrival_terminal\" class=\"gt_row gt_right\">4</td>\n<td headers=\"arrival_gate\" class=\"gt_row gt_left\">B55</td>\n<td headers=\"arrival_baggage\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"arrival_delay\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"arrival_scheduled\" class=\"gt_row gt_left\">2023-01-18T07:37:00+00:00</td>\n<td headers=\"arrival_estimated\" class=\"gt_row gt_left\">2023-01-18T07:37:00+00:00</td>\n<td headers=\"arrival_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"airline_name\" class=\"gt_row gt_left\">Alitalia</td>\n<td headers=\"airline_iata\" class=\"gt_row gt_left\">AZ</td>\n<td headers=\"airline_icao\" class=\"gt_row gt_left\">AZA</td>\n<td headers=\"flight_number\" class=\"gt_row gt_right\">5849</td>\n<td headers=\"flight_iata\" class=\"gt_row gt_left\">AZ5849</td>\n<td headers=\"flight_icao\" class=\"gt_row gt_left\">AZA5849</td>\n<td headers=\"aircraft\" class=\"gt_row gt_center\"></td>\n<td headers=\"live\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"flight_date\" class=\"gt_row gt_right\">2023-01-18</td>\n<td headers=\"flight_status\" class=\"gt_row gt_left\">active</td>\n<td headers=\"departure_airport\" class=\"gt_row gt_left\">Pittsburgh International</td>\n<td headers=\"departure_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"departure_iata\" class=\"gt_row gt_left\">PIT</td>\n<td headers=\"departure_icao\" class=\"gt_row gt_left\">KPIT</td>\n<td headers=\"departure_terminal\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_gate\" class=\"gt_row gt_left\">B37</td>\n<td headers=\"departure_delay\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"departure_scheduled\" class=\"gt_row gt_left\">2023-01-18T05:50:00+00:00</td>\n<td headers=\"departure_estimated\" class=\"gt_row gt_left\">2023-01-18T05:50:00+00:00</td>\n<td headers=\"departure_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_airport\" class=\"gt_row gt_left\">John F Kennedy International</td>\n<td headers=\"arrival_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"arrival_iata\" class=\"gt_row gt_left\">JFK</td>\n<td headers=\"arrival_icao\" class=\"gt_row gt_left\">KJFK</td>\n<td headers=\"arrival_terminal\" class=\"gt_row gt_right\">8</td>\n<td headers=\"arrival_gate\" class=\"gt_row gt_left\">37</td>\n<td headers=\"arrival_baggage\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"arrival_delay\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"arrival_scheduled\" class=\"gt_row gt_left\">2023-01-18T07:30:00+00:00</td>\n<td headers=\"arrival_estimated\" class=\"gt_row gt_left\">2023-01-18T07:30:00+00:00</td>\n<td headers=\"arrival_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"airline_name\" class=\"gt_row gt_left\">Qatar Airways</td>\n<td headers=\"airline_iata\" class=\"gt_row gt_left\">QR</td>\n<td headers=\"airline_icao\" class=\"gt_row gt_left\">QTR</td>\n<td headers=\"flight_number\" class=\"gt_row gt_right\">7678</td>\n<td headers=\"flight_iata\" class=\"gt_row gt_left\">QR7678</td>\n<td headers=\"flight_icao\" class=\"gt_row gt_left\">QTR7678</td>\n<td headers=\"aircraft\" class=\"gt_row gt_center\"></td>\n<td headers=\"live\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"flight_date\" class=\"gt_row gt_right\">2023-01-18</td>\n<td headers=\"flight_status\" class=\"gt_row gt_left\">scheduled</td>\n<td headers=\"departure_airport\" class=\"gt_row gt_left\">Luis Munoz Marin International</td>\n<td headers=\"departure_timezone\" class=\"gt_row gt_left\">America/Puerto_Rico</td>\n<td headers=\"departure_iata\" class=\"gt_row gt_left\">SJU</td>\n<td headers=\"departure_icao\" class=\"gt_row gt_left\">TJSJ</td>\n<td headers=\"departure_terminal\" class=\"gt_row gt_left\">A</td>\n<td headers=\"departure_gate\" class=\"gt_row gt_left\">5</td>\n<td headers=\"departure_delay\" class=\"gt_row gt_right\">3</td>\n<td headers=\"departure_scheduled\" class=\"gt_row gt_left\">2023-01-18T06:20:00+00:00</td>\n<td headers=\"departure_estimated\" class=\"gt_row gt_left\">2023-01-18T06:20:00+00:00</td>\n<td headers=\"departure_actual\" class=\"gt_row gt_left\">2023-01-18T06:22:00+00:00</td>\n<td headers=\"departure_estimated_runway\" class=\"gt_row gt_left\">2023-01-18T06:22:00+00:00</td>\n<td headers=\"departure_actual_runway\" class=\"gt_row gt_left\">2023-01-18T06:22:00+00:00</td>\n<td headers=\"arrival_airport\" class=\"gt_row gt_left\">John F Kennedy International</td>\n<td headers=\"arrival_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"arrival_iata\" class=\"gt_row gt_left\">JFK</td>\n<td headers=\"arrival_icao\" class=\"gt_row gt_left\">KJFK</td>\n<td headers=\"arrival_terminal\" class=\"gt_row gt_right\">5</td>\n<td headers=\"arrival_gate\" class=\"gt_row gt_left\">11</td>\n<td headers=\"arrival_baggage\" class=\"gt_row gt_right\">3</td>\n<td headers=\"arrival_delay\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"arrival_scheduled\" class=\"gt_row gt_left\">2023-01-18T09:25:00+00:00</td>\n<td headers=\"arrival_estimated\" class=\"gt_row gt_left\">2023-01-18T09:25:00+00:00</td>\n<td headers=\"arrival_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"airline_name\" class=\"gt_row gt_left\">JetBlue Airways</td>\n<td headers=\"airline_iata\" class=\"gt_row gt_left\">B6</td>\n<td headers=\"airline_icao\" class=\"gt_row gt_left\">JBU</td>\n<td headers=\"flight_number\" class=\"gt_row gt_right\">404</td>\n<td headers=\"flight_iata\" class=\"gt_row gt_left\">B6404</td>\n<td headers=\"flight_icao\" class=\"gt_row gt_left\">JBU404</td>\n<td headers=\"aircraft\" class=\"gt_row gt_center\"></td>\n<td headers=\"live\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"flight_date\" class=\"gt_row gt_right\">2023-01-18</td>\n<td headers=\"flight_status\" class=\"gt_row gt_left\">scheduled</td>\n<td headers=\"departure_airport\" class=\"gt_row gt_left\">Charleston, AFB Municipal</td>\n<td headers=\"departure_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"departure_iata\" class=\"gt_row gt_left\">CHS</td>\n<td headers=\"departure_icao\" class=\"gt_row gt_left\">KCHS</td>\n<td headers=\"departure_terminal\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_gate\" class=\"gt_row gt_left\">B8</td>\n<td headers=\"departure_delay\" class=\"gt_row gt_right\">34</td>\n<td headers=\"departure_scheduled\" class=\"gt_row gt_left\">2023-01-18T10:45:00+00:00</td>\n<td headers=\"departure_estimated\" class=\"gt_row gt_left\">2023-01-18T10:45:00+00:00</td>\n<td headers=\"departure_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"departure_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_airport\" class=\"gt_row gt_left\">John F Kennedy International</td>\n<td headers=\"arrival_timezone\" class=\"gt_row gt_left\">America/New_York</td>\n<td headers=\"arrival_iata\" class=\"gt_row gt_left\">JFK</td>\n<td headers=\"arrival_icao\" class=\"gt_row gt_left\">KJFK</td>\n<td headers=\"arrival_terminal\" class=\"gt_row gt_right\">5</td>\n<td headers=\"arrival_gate\" class=\"gt_row gt_left\">23</td>\n<td headers=\"arrival_baggage\" class=\"gt_row gt_right\">5</td>\n<td headers=\"arrival_delay\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"arrival_scheduled\" class=\"gt_row gt_left\">2023-01-18T12:35:00+00:00</td>\n<td headers=\"arrival_estimated\" class=\"gt_row gt_left\">2023-01-18T12:35:00+00:00</td>\n<td headers=\"arrival_actual\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_estimated_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"arrival_actual_runway\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"airline_name\" class=\"gt_row gt_left\">TAP Air Portugal</td>\n<td headers=\"airline_iata\" class=\"gt_row gt_left\">TP</td>\n<td headers=\"airline_icao\" class=\"gt_row gt_left\">TAP</td>\n<td headers=\"flight_number\" class=\"gt_row gt_right\">4266</td>\n<td headers=\"flight_iata\" class=\"gt_row gt_left\">TP4266</td>\n<td headers=\"flight_icao\" class=\"gt_row gt_left\">TAP4266</td>\n<td headers=\"aircraft\" class=\"gt_row gt_center\"></td>\n<td headers=\"live\" class=\"gt_row gt_center\"></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Data Prep for Plotting Flights\n\nLooking at our data, there's something that stands out, or should I say doesn't stand out. This data doesn't have any geographic information! We can't plot anything with this data.\n\nWell, thankfully for us, there is a nifty package that can help us called [airportr](https://github.com/dshkol/airportr). Airportr is a pretty simple package that does exactly what we need it to do. It uses data from [openfligts.org](openfligts.org) to take an airport name, such as an IATA code, and produce a bunch of information about that airport, including it's latitude and longitude! We can plot now! WOOHOO!\n\nSo let's get down to business. We are going to take our unnested data frame and use the IATA codes to get the latitude and longitude of each airport currently with flights heading to JFK airport.\n\nTo do this, we are going to use `purrr::map()` which takes a list or vector of values, and applies them one at a time to a function. The function we are applying them to is `airportr::airport_detail()` which is going to return the information we need.\n\n`purrr::map()` returns a list of values however and we want a data frame, so `purrr::list_rbind()` is going to collapse that list into exactly what we want. Once we have a data frame, we can add back in all the flight information from the API call to include as details in our map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlat_lon_dep <- tb_flight |> \n  mutate(departure_country = str_split(departure_timezone, '/')) |> \n  pull(departure_iata) |> \n  map(\\(x) airportr::airport_detail(input = x, input_type = \"IATA\")) |> \n  setNames(tb_flight$departure_iata) |> \n  list_rbind() |> \n  bind_cols(tb_flight |> \n              select(ends_with(\"scheduled\"), \n                     airline_name, \n                     flight_number)) |>\n  mutate(departure_scheduled = as.character(ymd_hms(departure_scheduled)),\n         arrival_scheduled = as.character(ymd_hms(arrival_scheduled)))\n```\n:::\n\n\nThis bit of code is to get us the location of JFK airport since flights don't leave JFK to arrive at JFK, or do they? That would be weird.\n\n\n::: {.cell}\n\n```{.r .cell-code}\narr_location <- map_vec(\"JFK\", \\(x) airportr::airport_location(input = x, input_type = \"IATA\"))\n\narr_location\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  Latitude Longitude\n     <dbl>     <dbl>\n1     40.6     -73.8\n```\n:::\n:::\n\n\nAnyway, once we get JFK's lat and long, we can do something to help us with our plotting later. On our map, we want to have a line point from the departure airport to JFK. To do this we need to have the a special data type called a `LINESTRING` which we well be creating later, but this is a necessary step to creating it.\n\nWe group the data frame we created by IATA code and then we pass the grouped data frame to a function called `group_modify()`. This function lets us apply function to each group, and we are using it to get one row for each IATA code found in our data. Then, for each group we are adding the longitude and latitude for JFK.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlat_lon_line <- lat_lon_dep |>\n  group_by(IATA) |> \n  group_modify(~ head(.x, 1L)) |> \n  group_modify(~ add_row(.x, \n                         Latitude = arr_location$Latitude, \n                         Longitude = arr_location$Longitude))\n```\n:::\n\n\nThis is what our output will look like.\n\nAs you can see, the second occurance of each IATA code contains the latitude and longitude of JFK.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlat_lon_line |> \n  select(IATA, Longitude, Latitude) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   IATA [3]\n  IATA  Longitude Latitude\n  <chr>     <dbl>    <dbl>\n1 AMS        4.76     52.3\n2 AMS      -73.8      40.6\n3 ATL      -84.4      33.6\n4 ATL      -73.8      40.6\n5 BGR      -68.8      44.8\n6 BGR      -73.8      40.6\n```\n:::\n:::\n\n\nWhen working with geographical data in R, the [sf package](https://r-spatial.github.io/sf/) going to be your best friend. This package contains so many functions to work with and map out geographic data. And most importantly for us, turn geographic data in numeric form into a geographic data structure called a geometry.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n:::\n\n\n`sf::st_as_sf()` is going to turn our long and lat values into a geometry data structure. All we have to do is give it our data frame, the column names that correspond to our long and lat values, and a value for our coordinate reference system. 4326 is a standard CRS code that helps applies the same mapping projection to all of our long and lat values when they are plotted.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndep_sf <- sf::st_as_sf(lat_lon_line, coords = c(\"Longitude\", \"Latitude\"), crs = 4326)\n```\n:::\n\n\nHere's why we went through all that trouble with `group_modify()` before. When we group dep_sf by IATA code and then call `summarise()` on it, we get the latitude and longitude for JFK and the other airport in the same column.\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code}\ndep_sf |> \n  group_by(IATA) |> \n  summarise() |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 1 field\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -84.4281 ymin: 33.6367 xmax: 4.76389 ymax: 52.3086\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 2\n  IATA                                  geometry\n  <chr>                         <MULTIPOINT [°]>\n1 AMS    ((4.76389 52.3086), (-73.7789 40.6398))\n2 ATL   ((-84.4281 33.6367), (-73.7789 40.6398))\n3 BGR   ((-68.8281 44.8074), (-73.7789 40.6398))\n4 BOS   ((-73.7789 40.6398), (-71.0052 42.3643))\n5 BTV   ((-73.1533 44.4719), (-73.7789 40.6398))\n6 BUF   ((-73.7789 40.6398), (-78.7322 42.9405))\n```\n:::\n:::\n\n\nNext, when we call another sf function, `st_cast()`, with the argument \"LINESTRING\", we get the geometry that we have been after. Now, we can plot lines between the airports!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndep_sf |> \n  group_by(IATA) |> \n  summarise() |> \n  st_cast(\"LINESTRING\") |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 6 features and 1 field\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -84.4281 ymin: 33.6367 xmax: 4.76389 ymax: 52.3086\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 2\n  IATA                              geometry\n  <chr>                     <LINESTRING [°]>\n1 AMS    (4.76389 52.3086, -73.7789 40.6398)\n2 ATL   (-84.4281 33.6367, -73.7789 40.6398)\n3 BGR   (-68.8281 44.8074, -73.7789 40.6398)\n4 BOS   (-73.7789 40.6398, -71.0052 42.3643)\n5 BTV   (-73.1533 44.4719, -73.7789 40.6398)\n6 BUF   (-73.7789 40.6398, -78.7322 42.9405)\n```\n:::\n:::\n\n\nThe final part of the pipe is adding on the information from our API call and the airportr function call.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndep_line <- dep_sf |> \n  group_by(IATA) |> \n  summarise() |> \n  st_cast(\"LINESTRING\") |> \n  bind_cols(lat_lon_dep |>\n              group_by(IATA) |> \n              group_modify(~ head(.x, 1L)) |> \n              ungroup() |> \n              select(-c(IATA))\n            )\n```\n:::\n\n\n## Plotting Our Data\n\nWe have finally made it to plotting our data! Wow, that was a long road but I am glad we are here.\n\nWe are going to be using the [leaflet R package](https://rstudio.github.io/leaflet/https://rstudio.github.io/leaflet/) which is the R implementation of a popular open-source JavaScript library for interactive mapping.\n\nI highly recommend checking out the documentation for using leaflet because it is very powerful, and what I am about to show you is a pretty simple use case in comparison to what is out there.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\n```\n:::\n\n\nAll leaflet code begins with the `leaflet()` function. Then we add our base map with `addTiles()`. Now we add our geometries. `addPolylines()` is how we add our LINESTIRNG data. We don't have to specify our columns in this instance because leaflet is looking for the geometry data structure we made. Next, we are adding markers for the airport locations using `addMarkers()`. In this case, we are referring to column names because we don't have a geometry data structure in this object. I'm also adding labels so information about each airport and the flight shows up when we hover over a marker, and finally, we are clustering markers because some airports have multiple flights going to JFK throughout the day.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Labels\"}\nlabel <- sprintf(\n  \"<strong>%s</strong><br/>%s<br/>%s<br/>Flight Number <strong>%s</strong>\n  <br/>Departure Time %s<br/> Arrvial Time %s\",\n  lat_lon_dep$City, lat_lon_dep$Name, lat_lon_dep$airline_name,\n  lat_lon_dep$flight_number, lat_lon_dep$departure_scheduled, lat_lon_dep$arrival_scheduled\n) %>% lapply(htmltools::HTML)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- \n  leaflet() |> \n  addTiles() |> \n  leaflet::addPolylines(data = dep_line) |> \n  addMarkers(data = lat_lon_dep, \n             lng = ~Longitude, \n             lat = ~Latitude, \n             label = label,\n             clusterOptions = markerClusterOptions(freezeAtZoom = 5))\n```\n:::\n\n\nSo with all our code put together, here's our finished map.\n\n\n::: {.cell .column-screen-inset-shaded}\n\n```{.r .cell-code}\nm\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-d48e3c37208a6b7e2db2\" style=\"width:100%;height:541px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d48e3c37208a6b7e2db2\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addPolylines\",\"args\":[[[[{\"lng\":[4.76389,-73.77890015],\"lat\":[52.308601,40.63980103]}]],[[{\"lng\":[-84.428101,-73.77890015],\"lat\":[33.6367,40.63980103]}]],[[{\"lng\":[-68.8281021118164,-73.77890015],\"lat\":[44.8073997497559,40.63980103]}]],[[{\"lng\":[-73.77890015,-71.00520325],\"lat\":[40.63980103,42.36429977]}]],[[{\"lng\":[-73.1532974243,-73.77890015],\"lat\":[44.4719009399,40.63980103]}]],[[{\"lng\":[-73.77890015,-78.73220062],\"lat\":[40.63980103,42.94049835]}]],[[{\"lng\":[-80.04049683,-73.77890015],\"lat\":[32.89860153,40.63980103]}]],[[{\"lng\":[-80.9430999755859,-73.77890015],\"lat\":[35.2140007019043,40.63980103]}]],[[{\"lng\":[-73.77890015,-86.8770980835],\"lat\":[40.63980103,21.0365009308]}]],[[{\"lng\":[-77.037697,-73.77890015],\"lat\":[38.8521,40.63980103]}]],[[{\"lng\":[-97.038002,-73.77890015],\"lat\":[32.896801,40.63980103]}]],[[{\"lng\":[51.608056,-73.77890015],\"lat\":[25.273056,40.63980103]}]],[[{\"lng\":[55.3643989563,-73.77890015],\"lat\":[25.2527999878,40.63980103]}]],[[{\"lng\":[12.2388889,-73.77890015],\"lat\":[41.8002778,40.63980103]}]],[[{\"lng\":[-80.152702,-73.77890015],\"lat\":[26.072599,40.63980103]}]],[[{\"lng\":[113.915001,-73.77890015],\"lat\":[22.308901,40.63980103]}]],[[{\"lng\":[-86.294403,-73.77890015],\"lat\":[39.7173,40.63980103]}]],[[{\"lng\":[-73.77890015,-76.4583969116211],\"lat\":[40.63980103,42.4910011291504]}]],[[{\"lng\":[-118.4079971,-73.77890015],\"lat\":[33.94250107,40.63980103]}]],[[{\"lng\":[-0.461941,-73.77890015],\"lat\":[51.4706,40.63980103]}]],[[{\"lng\":[-73.77890015,-77.114305],\"lat\":[40.63980103,-12.0219]}]],[[{\"lng\":[-81.3089981079102,-73.77890015],\"lat\":[28.4293994903564,40.63980103]}]],[[{\"lng\":[-89.9766998291016,-73.77890015],\"lat\":[35.0424003601074,40.63980103]}]],[[{\"lng\":[-80.2906036376953,-73.77890015],\"lat\":[25.7931995391846,40.63980103]}]],[[{\"lng\":[-100.107002258,-73.77890015],\"lat\":[25.7784996033,40.63980103]}]],[[{\"lng\":[-77.4662017822,-73.77890015],\"lat\":[25.0389995575,40.63980103]}]],[[{\"lng\":[-76.2012023925781,-73.77890015],\"lat\":[36.8945999145508,40.63980103]}]],[[{\"lng\":[-80.0955963134766,-73.77890015],\"lat\":[26.6832008361816,40.63980103]}]],[[{\"lng\":[-80.23290253,-73.77890015],\"lat\":[40.49150085,40.63980103]}]],[[{\"lng\":[-73.77890015,-77.6724014282227],\"lat\":[40.63980103,43.1189002990723]}]],[[{\"lng\":[-81.20210266,-73.77890015],\"lat\":[32.12760162,40.63980103]}]],[[{\"lng\":[-122.375,-73.77890015],\"lat\":[37.6189994812012,40.63980103]}]],[[{\"lng\":[-73.77890015,-66.0018005371],\"lat\":[40.63980103,18.4393997192]}]],[[{\"lng\":[-73.77890015,-64.9733963012695],\"lat\":[40.63980103,18.3372993469238]}]],[[{\"lng\":[34.8866996765137,-73.77890015],\"lat\":[32.0113983154297,40.63980103]}]],[[{\"lng\":[-82.533203125,-73.77890015],\"lat\":[27.9755001068115,40.63980103]}]],[[{\"lng\":[121.233002,-73.77890015],\"lat\":[25.0777,40.63980103]}]],[[{\"lng\":[-114.019996643,-73.77890015],\"lat\":[51.113899231,40.63980103]}]],[[{\"lng\":[-79.6305999756,-73.77890015],\"lat\":[43.6772003174,40.63980103]}]]],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"#03F\",\"weight\":5,\"opacity\":0.5,\"fill\":false,\"fillColor\":\"#03F\",\"fillOpacity\":0.2,\"smoothFactor\":1,\"noClip\":false},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addMarkers\",\"args\":[[22.308901,22.308901,38.8521,40.49150085,18.4393997192,32.89860153,18.3372993469238,18.3372993469238,18.3372993469238,18.3372993469238,18.3372993469238,18.3372993469238,32.89860153,27.9755001068115,27.9755001068115,25.2527999878,25.7931995391846,27.9755001068115,27.9755001068115,43.6772003174,39.7173,39.7173,40.49150085,25.273056,42.94049835,42.94049835,42.94049835,42.94049835,42.94049835,42.94049835,42.94049835,42.94049835,25.7784996033,25.0777,51.4706,42.4910011291504,44.4719009399,35.0424003601074,25.273056,25.0389995575,26.6832008361816,51.113899231,36.8945999145508,43.6772003174,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,37.6189994812012,44.4719009399,52.308601,44.8073997497559,32.12760162,32.12760162,32.12760162,32.12760162,21.0365009308,-12.0219,25.7931995391846,25.7931995391846,25.7931995391846,25.7931995391846,42.94049835,42.94049835,42.94049835,42.94049835,42.94049835,18.4393997192,18.4393997192,18.4393997192,43.6772003174,33.94250107,40.49150085,35.2140007019043,32.896801,32.896801,32.896801,32.896801,32.896801,32.896801,32.896801,41.8002778,26.072599,36.8945999145508,33.6367,43.1189002990723,26.6832008361816,42.94049835,42.36429977,28.4293994903564,32.0113983154297,32.0113983154297],[113.915001,113.915001,-77.037697,-80.23290253,-66.0018005371,-80.04049683,-64.9733963012695,-64.9733963012695,-64.9733963012695,-64.9733963012695,-64.9733963012695,-64.9733963012695,-80.04049683,-82.533203125,-82.533203125,55.3643989563,-80.2906036376953,-82.533203125,-82.533203125,-79.6305999756,-86.294403,-86.294403,-80.23290253,51.608056,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-100.107002258,121.233002,-0.461941,-76.4583969116211,-73.1532974243,-89.9766998291016,51.608056,-77.4662017822,-80.0955963134766,-114.019996643,-76.2012023925781,-79.6305999756,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-122.375,-73.1532974243,4.76389,-68.8281021118164,-81.20210266,-81.20210266,-81.20210266,-81.20210266,-86.8770980835,-77.114305,-80.2906036376953,-80.2906036376953,-80.2906036376953,-80.2906036376953,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-78.73220062,-66.0018005371,-66.0018005371,-66.0018005371,-79.6305999756,-118.4079971,-80.23290253,-80.9430999755859,-97.038002,-97.038002,-97.038002,-97.038002,-97.038002,-97.038002,-97.038002,12.2388889,-80.152702,-76.2012023925781,-84.428101,-77.6724014282227,-80.0955963134766,-78.73220062,-71.00520325,-81.3089981079102,34.8866996765137,34.8866996765137],null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,{\"showCoverageOnHover\":true,\"zoomToBoundsOnClick\":true,\"spiderfyOnMaxZoom\":true,\"removeOutsideVisibleBounds\":true,\"spiderLegPolylineOptions\":{\"weight\":1.5,\"color\":\"#222\",\"opacity\":0.5},\"freezeAtZoom\":5},null,[\"<strong>Hong Kong<\\/strong><br/>Hong Kong International Airport<br/>Malaysia Airlines<br/>Flight Number <strong>9210<\\/strong>\\n  <br/>Departure Time 2023-01-19 03:20:00<br/> Arrvial Time 2023-01-19 06:00:00\",\"<strong>Hong Kong<\\/strong><br/>Hong Kong International Airport<br/>Cathay Pacific<br/>Flight Number <strong>844<\\/strong>\\n  <br/>Departure Time 2023-01-19 03:20:00<br/> Arrvial Time 2023-01-19 06:00:00\",\"<strong>Washington<\\/strong><br/>Ronald Reagan Washington National Airport<br/>Alitalia<br/>Flight Number <strong>5849<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:10:00<br/> Arrvial Time 2023-01-18 07:37:00\",\"<strong>Pittsburgh<\\/strong><br/>Pittsburgh International Airport<br/>Qatar Airways<br/>Flight Number <strong>7678<\\/strong>\\n  <br/>Departure Time 2023-01-18 05:50:00<br/> Arrvial Time 2023-01-18 07:30:00\",\"<strong>San Juan<\\/strong><br/>Luis Munoz Marin International Airport<br/>JetBlue Airways<br/>Flight Number <strong>404<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:20:00<br/> Arrvial Time 2023-01-18 09:25:00\",\"<strong>Charleston<\\/strong><br/>Charleston Air Force Base-International Airport<br/>TAP Air Portugal<br/>Flight Number <strong>4266<\\/strong>\\n  <br/>Departure Time 2023-01-18 10:45:00<br/> Arrvial Time 2023-01-18 12:35:00\",\"<strong>St. Thomas<\\/strong><br/>Cyril E. King Airport<br/>JetBlue Airways<br/>Flight Number <strong>4084<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:14:00<br/> Arrvial Time 2023-01-18 17:29:00\",\"<strong>St. Thomas<\\/strong><br/>Cyril E. King Airport<br/>Qatar Airways<br/>Flight Number <strong>9012<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:14:00<br/> Arrvial Time 2023-01-18 17:29:00\",\"<strong>St. Thomas<\\/strong><br/>Cyril E. King Airport<br/>American Airlines<br/>Flight Number <strong>936<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:14:00<br/> Arrvial Time 2023-01-18 17:29:00\",\"<strong>St. Thomas<\\/strong><br/>Cyril E. King Airport<br/>Alitalia<br/>Flight Number <strong>3189<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:35:00<br/> Arrvial Time 2023-01-18 17:45:00\",\"<strong>St. Thomas<\\/strong><br/>Cyril E. King Airport<br/>KLM<br/>Flight Number <strong>7799<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:35:00<br/> Arrvial Time 2023-01-18 17:45:00\",\"<strong>St. Thomas<\\/strong><br/>Cyril E. King Airport<br/>Virgin Atlantic<br/>Flight Number <strong>4942<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:35:00<br/> Arrvial Time 2023-01-18 17:45:00\",\"<strong>Charleston<\\/strong><br/>Charleston Air Force Base-International Airport<br/>Royal Air Maroc<br/>Flight Number <strong>9625<\\/strong>\\n  <br/>Departure Time 2023-01-18 10:45:00<br/> Arrvial Time 2023-01-18 12:35:00\",\"<strong>Tampa<\\/strong><br/>Tampa International Airport<br/>JAL<br/>Flight Number <strong>5851<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:21:00<br/> Arrvial Time 2023-01-18 09:00:00\",\"<strong>Tampa<\\/strong><br/>Tampa International Airport<br/>American Airlines<br/>Flight Number <strong>9104<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:21:00<br/> Arrvial Time 2023-01-18 09:00:00\",\"<strong>Dubai<\\/strong><br/>Dubai International Airport<br/>Emirates<br/>Flight Number <strong>201<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:30:00<br/> Arrvial Time 2023-01-18 13:55:00\",\"<strong>Miami<\\/strong><br/>Miami International Airport<br/>Alitalia<br/>Flight Number <strong>3358<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:35:00<br/> Arrvial Time 2023-01-18 10:20:00\",\"<strong>Tampa<\\/strong><br/>Tampa International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>4946<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:30:00<br/> Arrvial Time 2023-01-18 10:10:00\",\"<strong>Tampa<\\/strong><br/>Tampa International Airport<br/>Delta Air Lines<br/>Flight Number <strong>1641<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:30:00<br/> Arrvial Time 2023-01-18 10:10:00\",\"<strong>Toronto<\\/strong><br/>Lester B. Pearson International Airport<br/>American Airlines<br/>Flight Number <strong>4422<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:11:00<br/> Arrvial Time 2023-01-18 08:00:00\",\"<strong>Indianapolis<\\/strong><br/>Indianapolis International Airport<br/>Alitalia<br/>Flight Number <strong>3527<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:00:00<br/> Arrvial Time 2023-01-18 09:23:00\",\"<strong>Indianapolis<\\/strong><br/>Indianapolis International Airport<br/>Korean Air<br/>Flight Number <strong>7545<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:00:00<br/> Arrvial Time 2023-01-18 09:23:00\",\"<strong>Pittsburgh<\\/strong><br/>Pittsburgh International Airport<br/>WestJet<br/>Flight Number <strong>7432<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 07:50:00\",\"<strong>Doha<\\/strong><br/>Hamad International Airport<br/>Alaska Airlines<br/>Flight Number <strong>5839<\\/strong>\\n  <br/>Departure Time 2023-01-18 15:30:00<br/> Arrvial Time 2023-01-18 22:20:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>JetBlue Airways<br/>Flight Number <strong>2601<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Singapore Airlines<br/>Flight Number <strong>1457<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Qatar Airways<br/>Flight Number <strong>3882<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>El Al<br/>Flight Number <strong>8622<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Etihad Airways<br/>Flight Number <strong>8242<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Aer Lingus<br/>Flight Number <strong>5033<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Royal Air Maroc<br/>Flight Number <strong>9629<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>American Airlines<br/>Flight Number <strong>9455<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:30:00<br/> Arrvial Time 2023-01-18 14:58:00\",\"<strong>Monterrey<\\/strong><br/>General Mariano Escobedo International Airport<br/>American Airlines<br/>Flight Number <strong>2928<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:19:00<br/> Arrvial Time 2023-01-18 11:31:00\",\"<strong>Taipei<\\/strong><br/>Taiwan Taoyuan International Airport<br/>SA AVIANCA<br/>Flight Number <strong>4511<\\/strong>\\n  <br/>Departure Time 2023-01-18 19:30:00<br/> Arrvial Time 2023-01-18 21:10:00\",\"<strong>London<\\/strong><br/>London Heathrow Airport<br/>British Airways<br/>Flight Number <strong>179<\\/strong>\\n  <br/>Departure Time 2023-01-18 18:00:00<br/> Arrvial Time 2023-01-18 21:10:00\",\"<strong>Ithaca<\\/strong><br/>Ithaca Tompkins Regional Airport<br/>Delta Air Lines<br/>Flight Number <strong>4728<\\/strong>\\n  <br/>Departure Time 2023-01-18 05:31:00<br/> Arrvial Time 2023-01-18 07:03:00\",\"<strong>Burlington<\\/strong><br/>Burlington International Airport<br/>Delta Air Lines<br/>Flight Number <strong>5378<\\/strong>\\n  <br/>Departure Time 2023-01-18 05:15:00<br/> Arrvial Time 2023-01-18 07:00:00\",\"<strong>Memphis<\\/strong><br/>Memphis International Airport<br/>FedEx<br/>Flight Number <strong>1431<\\/strong>\\n  <br/>Departure Time 2023-01-18 02:40:00<br/> Arrvial Time 2023-01-18 05:38:00\",\"<strong>Doha<\\/strong><br/>Hamad International Airport<br/>SriLankan Airlines<br/>Flight Number <strong>3000<\\/strong>\\n  <br/>Departure Time 2023-01-18 15:30:00<br/> Arrvial Time 2023-01-18 22:20:00\",\"<strong>Nassau<\\/strong><br/>Lynden Pindling International Airport<br/>Delta Air Lines<br/>Flight Number <strong>1918<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:00:00<br/> Arrvial Time 2023-01-18 16:55:00\",\"<strong>West Palm Beach<\\/strong><br/>Palm Beach International Airport<br/>TAP Air Portugal<br/>Flight Number <strong>4440<\\/strong>\\n  <br/>Departure Time 2023-01-18 10:55:00<br/> Arrvial Time 2023-01-18 13:39:00\",\"<strong>Calgary<\\/strong><br/>Calgary International Airport<br/>WestJet<br/>Flight Number <strong>1680<\\/strong>\\n  <br/>Departure Time 2023-01-18 09:50:00<br/> Arrvial Time 2023-01-18 16:27:00\",\"<strong>Norfolk<\\/strong><br/>Norfolk International Airport<br/>Aeromexico<br/>Flight Number <strong>4311<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:42:00<br/> Arrvial Time 2023-01-18 13:09:00\",\"<strong>Toronto<\\/strong><br/>Lester B. Pearson International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>4728<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 07:59:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>4768<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:30:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Air Europa<br/>Flight Number <strong>3427<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:30:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>LATAM Airlines<br/>Flight Number <strong>6409<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:30:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>KLM<br/>Flight Number <strong>5051<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:30:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Alitalia<br/>Flight Number <strong>3104<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:30:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Air France<br/>Flight Number <strong>2246<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:30:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>TAP Air Portugal<br/>Flight Number <strong>4390<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Singapore Airlines<br/>Flight Number <strong>1463<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>El Al<br/>Flight Number <strong>8732<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Hawaiian Airlines<br/>Flight Number <strong>2362<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Icelandair<br/>Flight Number <strong>7896<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>Royal Air Maroc<br/>Flight Number <strong>9559<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>San Francisco<\\/strong><br/>San Francisco International Airport<br/>American Airlines<br/>Flight Number <strong>9368<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 14:23:00\",\"<strong>Burlington<\\/strong><br/>Burlington International Airport<br/>Korean Air<br/>Flight Number <strong>7368<\\/strong>\\n  <br/>Departure Time 2023-01-18 05:15:00<br/> Arrvial Time 2023-01-18 07:00:00\",\"<strong>Amsterdam<\\/strong><br/>Amsterdam Airport Schiphol<br/>Virgin Atlantic<br/>Flight Number <strong>6837<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:35:00<br/> Arrvial Time 2023-01-18 15:50:00\",\"<strong>Bangor<\\/strong><br/>Bangor International Airport<br/>KLM<br/>Flight Number <strong>6635<\\/strong>\\n  <br/>Departure Time 2023-01-18 05:10:00<br/> Arrvial Time 2023-01-18 06:57:00\",\"<strong>Savannah<\\/strong><br/>Savannah Hilton Head International Airport<br/>Delta Air Lines<br/>Flight Number <strong>4804<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:15:00<br/> Arrvial Time 2023-01-18 09:24:00\",\"<strong>Savannah<\\/strong><br/>Savannah Hilton Head International Airport<br/>WestJet<br/>Flight Number <strong>7601<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:15:00<br/> Arrvial Time 2023-01-18 09:24:00\",\"<strong>Savannah<\\/strong><br/>Savannah Hilton Head International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>3749<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:15:00<br/> Arrvial Time 2023-01-18 09:24:00\",\"<strong>Savannah<\\/strong><br/>Savannah Hilton Head International Airport<br/>China Eastern Airlines<br/>Flight Number <strong>4684<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:15:00<br/> Arrvial Time 2023-01-18 09:24:00\",\"<strong>Cancun<\\/strong><br/>Cancún International Airport<br/>American Airlines<br/>Flight Number <strong>1327<\\/strong>\\n  <br/>Departure Time 2023-01-18 12:30:00<br/> Arrvial Time 2023-01-18 16:19:00\",\"<strong>Lima<\\/strong><br/>Jorge Chávez International Airport<br/>JAL<br/>Flight Number <strong>8252<\\/strong>\\n  <br/>Departure Time 2023-01-18 00:30:00<br/> Arrvial Time 2023-01-18 08:20:00\",\"<strong>Miami<\\/strong><br/>Miami International Airport<br/>KLM<br/>Flight Number <strong>6957<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:35:00<br/> Arrvial Time 2023-01-18 10:20:00\",\"<strong>Miami<\\/strong><br/>Miami International Airport<br/>Kenya Airways<br/>Flight Number <strong>7013<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:35:00<br/> Arrvial Time 2023-01-18 10:20:00\",\"<strong>Miami<\\/strong><br/>Miami International Airport<br/>LATAM Airlines<br/>Flight Number <strong>6245<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:35:00<br/> Arrvial Time 2023-01-18 10:20:00\",\"<strong>Miami<\\/strong><br/>Miami International Airport<br/>China Eastern Airlines<br/>Flight Number <strong>4665<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:35:00<br/> Arrvial Time 2023-01-18 10:20:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Turkish Airlines<br/>Flight Number <strong>8956<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:33:00<br/> Arrvial Time 2023-01-18 09:59:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Qatar Airways<br/>Flight Number <strong>4200<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:33:00<br/> Arrvial Time 2023-01-18 09:59:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>JAL<br/>Flight Number <strong>5921<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:33:00<br/> Arrvial Time 2023-01-18 09:59:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>Aer Lingus<br/>Flight Number <strong>5031<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:33:00<br/> Arrvial Time 2023-01-18 09:59:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>American Airlines<br/>Flight Number <strong>9434<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:33:00<br/> Arrvial Time 2023-01-18 09:59:00\",\"<strong>San Juan<\\/strong><br/>Luis Munoz Marin International Airport<br/>JetBlue Airways<br/>Flight Number <strong>2130<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:30:00<br/> Arrvial Time 2023-01-18 10:29:00\",\"<strong>San Juan<\\/strong><br/>Luis Munoz Marin International Airport<br/>Qatar Airways<br/>Flight Number <strong>4024<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:30:00<br/> Arrvial Time 2023-01-18 10:29:00\",\"<strong>San Juan<\\/strong><br/>Luis Munoz Marin International Airport<br/>JAL<br/>Flight Number <strong>5495<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:30:00<br/> Arrvial Time 2023-01-18 10:29:00\",\"<strong>Toronto<\\/strong><br/>Lester B. Pearson International Airport<br/>Delta Air Lines<br/>Flight Number <strong>4731<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:00:00<br/> Arrvial Time 2023-01-18 07:59:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Singapore Airlines<br/>Flight Number <strong>1530<\\/strong>\\n  <br/>Departure Time 2023-01-18 05:30:00<br/> Arrvial Time 2023-01-18 13:56:00\",\"<strong>Pittsburgh<\\/strong><br/>Pittsburgh International Airport<br/>WestJet<br/>Flight Number <strong>7287<\\/strong>\\n  <br/>Departure Time 2023-01-18 12:28:00<br/> Arrvial Time 2023-01-18 14:10:00\",\"<strong>Charlotte<\\/strong><br/>Charlotte Douglas International Airport<br/>American Airlines<br/>Flight Number <strong>2731<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:41:00<br/> Arrvial Time 2023-01-18 16:29:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>Air France<br/>Flight Number <strong>2384<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>Aeromexico<br/>Flight Number <strong>3400<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>Alitalia<br/>Flight Number <strong>3403<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>Korean Air<br/>Flight Number <strong>3174<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>KLM<br/>Flight Number <strong>5033<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>LATAM Airlines<br/>Flight Number <strong>6677<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Dallas-Fort Worth<\\/strong><br/>Dallas Fort Worth International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>3471<\\/strong>\\n  <br/>Departure Time 2023-01-18 11:10:00<br/> Arrvial Time 2023-01-18 15:35:00\",\"<strong>Rome<\\/strong><br/>Leonardo da Vinci–Fiumicino Airport<br/>Delta Air Lines<br/>Flight Number <strong>153<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:35:00<br/> Arrvial Time 2023-01-18 17:25:00\",\"<strong>Fort Lauderdale<\\/strong><br/>Fort Lauderdale Hollywood International Airport<br/>JetBlue Airways<br/>Flight Number <strong>1902<\\/strong>\\n  <br/>Departure Time 2023-01-18 14:30:00<br/> Arrvial Time 2023-01-18 17:24:00\",\"<strong>Norfolk<\\/strong><br/>Norfolk International Airport<br/>Kenya Airways<br/>Flight Number <strong>7063<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:00:00<br/> Arrvial Time 2023-01-18 08:25:00\",\"<strong>Atlanta<\\/strong><br/>Hartsfield Jackson Atlanta International Airport<br/>JetBlue Airways<br/>Flight Number <strong>1968<\\/strong>\\n  <br/>Departure Time 2023-01-18 09:54:00<br/> Arrvial Time 2023-01-18 12:05:00\",\"<strong>Rochester<\\/strong><br/>Greater Rochester International Airport<br/>JetBlue Airways<br/>Flight Number <strong>185<\\/strong>\\n  <br/>Departure Time 2023-01-18 06:03:00<br/> Arrvial Time 2023-01-18 07:30:00\",\"<strong>West Palm Beach<\\/strong><br/>Palm Beach International Airport<br/>Singapore Airlines<br/>Flight Number <strong>1490<\\/strong>\\n  <br/>Departure Time 2023-01-18 07:00:00<br/> Arrvial Time 2023-01-18 09:43:00\",\"<strong>Buffalo<\\/strong><br/>Buffalo Niagara International Airport<br/>China Eastern Airlines<br/>Flight Number <strong>4547<\\/strong>\\n  <br/>Departure Time 2023-01-18 10:29:00<br/> Arrvial Time 2023-01-18 12:00:00\",\"<strong>Boston<\\/strong><br/>General Edward Lawrence Logan International Airport<br/>American Airlines<br/>Flight Number <strong>4302<\\/strong>\\n  <br/>Departure Time 2023-01-18 08:03:00<br/> Arrvial Time 2023-01-18 09:30:00\",\"<strong>Orlando<\\/strong><br/>Orlando International Airport<br/>JetBlue Airways<br/>Flight Number <strong>1584<\\/strong>\\n  <br/>Departure Time 2023-01-18 09:25:00<br/> Arrvial Time 2023-01-18 11:55:00\",\"<strong>Tel-aviv<\\/strong><br/>Ben Gurion International Airport<br/>El Al<br/>Flight Number <strong>7<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:00:00<br/> Arrvial Time 2023-01-18 18:00:00\",\"<strong>Tel-aviv<\\/strong><br/>Ben Gurion International Airport<br/>Aerolineas Argentinas<br/>Flight Number <strong>7855<\\/strong>\\n  <br/>Departure Time 2023-01-18 13:00:00<br/> Arrvial Time 2023-01-18 18:00:00\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[-12.0219,52.308601],\"lng\":[-122.375,121.233002]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Putting Everything into a Function\n\nI thought that this code could probably be put into a function, so I did!\n\nIf you want to try this out for yourself, here's all the code you need. Don't forget to install the necessary libraries!\n\nAnd for a bonus, at the bottom of this page there is a map using this function to map flights going to San Francisco!\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code}\nflights_map <- function(api, arr_IATA) {\n  \n  r <- httr::GET(\"http://api.aviationstack.com/v1/flights\", \n                 query = list(access_key = api, arr_IATA = arr_IATA))\n  \n  r\n  \n  httr::status_code(r)\n  \n  flights <- httr::content(r)\n  \n  data_flight <- tibble(flights$data)\n  \n  tb_flight <- data_flight |> \n    tidyr::unnest_wider(col = c(\"flights$data\")) |> \n    tidyr::unnest_wider(col = c(departure), names_sep = \"_\") |> \n    tidyr::unnest_wider(col = c(arrival), names_sep = \"_\") |> \n    tidyr::unnest_wider(col = c(airline), names_sep = \"_\") |> \n    tidyr::unnest_wider(col = c(flight), names_sep = \"_\") |> \n    dplyr::select(-ends_with(c(\"codeshared\")))\n  \n  lat_lon_dep <- tb_flight |> \n    dplyr::mutate(departure_country = str_split(departure_timezone, '/')) |> \n    dplyr::pull(departure_iata) |> \n    purrr::map(\\(x) airportr::airport_detail(input = x, \n                                             input_type = \"IATA\")) |> \n    setNames(tb_flight$departure_iata) |> \n    purrr::list_rbind() |> \n    dplyr::bind_cols(tb_flight |> \n                       dplyr::select(ends_with(\"scheduled\"), \n                                     airline_name, \n                                     flight_number)) |>\n    dplyr::mutate(departure_scheduled = as.character(ymd_hms(departure_scheduled)),\n                  arrival_scheduled = as.character(ymd_hms(arrival_scheduled)))\n  \n  arr_location <- purrr::map_vec(arr_iata, \\(x) airportr::airport_location(input = x, \n                                                                           input_type = \"IATA\"))\n  \n  lat_lon_line <- lat_lon_dep |>\n    dplyr::group_by(IATA) |> \n    dplyr::group_modify(~ head(.x, 1L)) |> \n    dplyr::group_modify(~ add_row(.x, \n                                  Latitude = arr_location$Latitude, \n                                  Longitude = arr_location$Longitude))\n  \n  \n  dep_sf <- sf::st_as_sf(lat_lon_line, \n                         coords = c(\"Longitude\", \"Latitude\"), \n                         crs = 4326)\n  \n  \n  dep_line <- dep_sf |> \n    dplyr::group_by(IATA) |> \n    dplyr::summarise() |> \n    sf::st_cast(\"LINESTRING\") |> \n    dplyr::bind_cols(lat_lon_dep |>\n                       dplyr::group_by(IATA) |> \n                       dplyr::group_modify(~ head(.x, 1L)) |> \n                       dplyr::ungroup() |> \n                       dplyr::select(-c(IATA))\n    )\n  \n  label <- sprintf(\n    \"<strong>%s</strong><br/>%s<br/>%s<br/>Flight Number <strong>%s</strong>\n  <br/>Departure Time %s<br/> Arrvial Time %s\",\n  lat_lon_dep$City, \n  lat_lon_dep$Name, \n  lat_lon_dep$airline_name,\n  lat_lon_dep$flight_number, \n  lat_lon_dep$departure_scheduled,\n  lat_lon_dep$arrival_scheduled\n  ) %>% \n    lapply(htmltools::HTML)\n  \n  m <- \n    leaflet::leaflet() |> \n    leaflet::addTiles() |> \n    leaflet::addPolylines(data = dep_line) |> \n    leaflet::addMarkers(data = lat_lon_dep, \n                        lng = ~Longitude, \n                        lat = ~Latitude, \n                        label = label,\n                        clusterOptions = leaflet::markerClusterOptions(freezeAtZoom = 5))\n  m\n}\n```\n:::\n\n\n``` r\napi <- rstudioapi::askForPassword()\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights_map(api, \"SFO\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell .column-screen-inset-shaded}\n\n```{.r .cell-code}\nm\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"leaflet html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-84270719af50b8897c16\" style=\"width:100%;height:541px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-84270719af50b8897c16\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"https://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addPolylines\",\"args\":[[[[{\"lng\":[174.792007446,-122.375],\"lat\":[-37.0080986023,37.6189994812012]}]],[[{\"lng\":[-122.375,-84.428101],\"lat\":[37.6189994812012,33.6367]}]],[[{\"lng\":[-122.375,-119.0569992],\"lat\":[37.6189994812012,35.43360138]}]],[[{\"lng\":[77.706299,-122.375],\"lat\":[13.1979,37.6189994812012]}]],[[{\"lng\":[-122.375,-71.00520325],\"lat\":[37.6189994812012,42.36429977]}]],[[{\"lng\":[-122.375,-118.359001159668],\"lat\":[37.6189994812012,34.2006988525391]}]],[[{\"lng\":[-122.375,-81.8498001099],\"lat\":[37.6189994812012,41.4117012024]}]],[[{\"lng\":[-122.375,-84.6678009033],\"lat\":[37.6189994812012,39.0488014221]}]],[[{\"lng\":[-123.21199798584,-122.375],\"lat\":[44.1245994567871,37.6189994812012]}]],[[{\"lng\":[-122.375,-74.168701171875],\"lat\":[37.6189994812012,40.6925010681152]}]],[[{\"lng\":[-122.375,-119.718002319336],\"lat\":[37.6189994812012,36.7761993408203]}]],[[{\"lng\":[-117.533996582031,-122.375],\"lat\":[47.6198997497559,37.6189994812012]}]],[[{\"lng\":[113.915001,-122.375],\"lat\":[22.308901,37.6189994812012]}]],[[{\"lng\":[126.450996398926,-122.375],\"lat\":[37.4691009521484,37.6189994812012]}]],[[{\"lng\":[135.244003295898,-122.375],\"lat\":[34.4272994995117,37.6189994812012]}]],[[{\"lng\":[-122.375,-115.1520004],\"lat\":[37.6189994812012,36.08010101]}]],[[{\"lng\":[-122.375,-118.4079971],\"lat\":[37.6189994812012,33.94250107]}]],[[{\"lng\":[-0.461941,-122.375],\"lat\":[51.4706,37.6189994812012]}]],[[{\"lng\":[-122.375,-94.713898],\"lat\":[37.6189994812012,39.2976]}]],[[{\"lng\":[144.843002,-122.375],\"lat\":[-37.673302,37.6189994812012]}]],[[{\"lng\":[-122.375,-90.2580032348633],\"lat\":[37.6189994812012,29.9934005737305]}]],[[{\"lng\":[-122.375,-95.894096],\"lat\":[37.6189994812012,41.3032]}]],[[{\"lng\":[-122.375,-117.600997924805],\"lat\":[37.6189994812012,34.0559997558594]}]],[[{\"lng\":[-122.5979996,-122.375],\"lat\":[45.58869934,37.6189994812012]}]],[[{\"lng\":[-122.375,-119.767997741699],\"lat\":[37.6189994812012,39.4990997314453]}]],[[{\"lng\":[-122.375,-117.190002441],\"lat\":[37.6189994812012,32.7336006165]}]],[[{\"lng\":[-122.375,-120.641998291],\"lat\":[37.6189994812012,35.2368011475]}]],[[{\"lng\":[-122.375,-85.736],\"lat\":[37.6189994812012,38.1744]}]],[[{\"lng\":[-122.308998,-122.375],\"lat\":[47.449001,37.6189994812012]}]],[[{\"lng\":[-122.375,-111.977996826172],\"lat\":[37.6189994812012,40.7883987426758]}]],[[{\"lng\":[-122.375,-117.8679962],\"lat\":[37.6189994812012,33.67570114]}]],[[{\"lng\":[34.8866996765137,-122.375],\"lat\":[32.0113983154297,37.6189994812012]}]],[[{\"lng\":[-122.375,-110.94100189209],\"lat\":[37.6189994812012,32.1161003112793]}]]],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"#03F\",\"weight\":5,\"opacity\":0.5,\"fill\":false,\"fillColor\":\"#03F\",\"fillOpacity\":0.2,\"smoothFactor\":1,\"noClip\":false},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addMarkers\",\"args\":[[22.308901,22.308901,22.308901,39.4990997314453,39.4990997314453,39.4990997314453,39.4990997314453,39.4990997314453,39.4990997314453,39.4990997314453,39.4990997314453,39.4990997314453,34.0559997558594,34.0559997558594,13.1979,39.2976,39.2976,42.36429977,41.3032,42.36429977,32.7336006165,34.2006988525391,32.1161003112793,47.449001,32.7336006165,35.2368011475,47.449001,45.58869934,32.0113983154297,32.1161003112793,32.1161003112793,45.58869934,45.58869934,39.0488014221,33.67570114,33.67570114,33.67570114,34.2006988525391,47.6198997497559,40.7883987426758,40.7883987426758,40.7883987426758,40.7883987426758,40.7883987426758,45.58869934,45.58869934,45.58869934,45.58869934,35.43360138,44.1245994567871,40.7883987426758,40.7883987426758,51.4706,47.449001,47.449001,47.449001,47.449001,40.7883987426758,-37.0080986023,33.94250107,32.7336006165,32.7336006165,47.449001,47.449001,47.449001,47.449001,-37.673302,-37.673302,32.7336006165,32.7336006165,32.7336006165,32.7336006165,32.7336006165,34.4272994995117,42.36429977,41.4117012024,33.6367,47.449001,38.1744,36.08010101,47.449001,37.4691009521484,40.6925010681152,29.9934005737305,45.58869934,45.58869934,45.58869934,36.7761993408203,33.67570114,40.6925010681152,33.67570114,33.94250107,33.94250107,33.94250107,33.94250107,33.94250107,33.94250107,33.94250107,33.94250107,33.94250107],[113.915001,113.915001,113.915001,-119.767997741699,-119.767997741699,-119.767997741699,-119.767997741699,-119.767997741699,-119.767997741699,-119.767997741699,-119.767997741699,-119.767997741699,-117.600997924805,-117.600997924805,77.706299,-94.713898,-94.713898,-71.00520325,-95.894096,-71.00520325,-117.190002441,-118.359001159668,-110.94100189209,-122.308998,-117.190002441,-120.641998291,-122.308998,-122.5979996,34.8866996765137,-110.94100189209,-110.94100189209,-122.5979996,-122.5979996,-84.6678009033,-117.8679962,-117.8679962,-117.8679962,-118.359001159668,-117.533996582031,-111.977996826172,-111.977996826172,-111.977996826172,-111.977996826172,-111.977996826172,-122.5979996,-122.5979996,-122.5979996,-122.5979996,-119.0569992,-123.21199798584,-111.977996826172,-111.977996826172,-0.461941,-122.308998,-122.308998,-122.308998,-122.308998,-111.977996826172,174.792007446,-118.4079971,-117.190002441,-117.190002441,-122.308998,-122.308998,-122.308998,-122.308998,144.843002,144.843002,-117.190002441,-117.190002441,-117.190002441,-117.190002441,-117.190002441,135.244003295898,-71.00520325,-81.8498001099,-84.428101,-122.308998,-85.736,-115.1520004,-122.308998,126.450996398926,-74.168701171875,-90.2580032348633,-122.5979996,-122.5979996,-122.5979996,-119.718002319336,-117.8679962,-74.168701171875,-117.8679962,-118.4079971,-118.4079971,-118.4079971,-118.4079971,-118.4079971,-118.4079971,-118.4079971,-118.4079971,-118.4079971],null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,{\"showCoverageOnHover\":true,\"zoomToBoundsOnClick\":true,\"spiderfyOnMaxZoom\":true,\"removeOutsideVisibleBounds\":true,\"spiderLegPolylineOptions\":{\"weight\":1.5,\"color\":\"#222\",\"opacity\":0.5},\"freezeAtZoom\":5},null,[\"<strong>Hong Kong<\\/strong><br/>Hong Kong International Airport<br/>Cathay Pacific<br/>Flight Number <strong>872<\\/strong>\\n  <br/>Departure Time 2023-01-21 00:55:00<br/> Arrvial Time 2023-01-20 20:55:00\",\"<strong>Hong Kong<\\/strong><br/>Hong Kong International Airport<br/>Malaysia Airlines<br/>Flight Number <strong>9198<\\/strong>\\n  <br/>Departure Time 2023-01-21 00:55:00<br/> Arrvial Time 2023-01-20 20:55:00\",\"<strong>Hong Kong<\\/strong><br/>Hong Kong International Airport<br/>American Airlines<br/>Flight Number <strong>8930<\\/strong>\\n  <br/>Departure Time 2023-01-21 00:55:00<br/> Arrvial Time 2023-01-20 20:55:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>Air Canada<br/>Flight Number <strong>4371<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 07:31:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>ANA<br/>Flight Number <strong>7379<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 07:31:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>Air New Zealand<br/>Flight Number <strong>9581<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 07:31:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>United Airlines<br/>Flight Number <strong>1281<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 07:31:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>Air Canada<br/>Flight Number <strong>4145<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:45:00<br/> Arrvial Time 2023-01-20 12:04:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>SA AVIANCA<br/>Flight Number <strong>2105<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:45:00<br/> Arrvial Time 2023-01-20 12:04:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>Lufthansa<br/>Flight Number <strong>8909<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:45:00<br/> Arrvial Time 2023-01-20 12:04:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>Air New Zealand<br/>Flight Number <strong>9582<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:45:00<br/> Arrvial Time 2023-01-20 12:04:00\",\"<strong>Reno<\\/strong><br/>Reno Tahoe International Airport<br/>SkyWest Airlines<br/>Flight Number <strong>5899<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:45:00<br/> Arrvial Time 2023-01-20 12:04:00\",\"<strong>Ontario<\\/strong><br/>Ontario International Airport<br/>United Airlines<br/>Flight Number <strong>5416<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:31:00<br/> Arrvial Time 2023-01-20 12:05:00\",\"<strong>Ontario<\\/strong><br/>Ontario International Airport<br/>Air Canada<br/>Flight Number <strong>4424<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:31:00<br/> Arrvial Time 2023-01-20 12:05:00\",\"<strong>Bangalore<\\/strong><br/>Kempegowda International Airport<br/>Air India<br/>Flight Number <strong>175<\\/strong>\\n  <br/>Departure Time 2023-01-20 14:20:00<br/> Arrvial Time 2023-01-20 17:00:00\",\"<strong>Kansas City<\\/strong><br/>Kansas City International Airport<br/>United Airlines<br/>Flight Number <strong>694<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:15:00<br/> Arrvial Time 2023-01-20 09:25:00\",\"<strong>Kansas City<\\/strong><br/>Kansas City International Airport<br/>Asiana Airlines<br/>Flight Number <strong>6318<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:15:00<br/> Arrvial Time 2023-01-20 09:25:00\",\"<strong>Boston<\\/strong><br/>General Edward Lawrence Logan International Airport<br/>Air New Zealand<br/>Flight Number <strong>9023<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 11:53:00\",\"<strong>Omaha<\\/strong><br/>Eppley Airfield<br/>Air Canada<br/>Flight Number <strong>4685<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:35:00<br/> Arrvial Time 2023-01-20 09:34:00\",\"<strong>Boston<\\/strong><br/>General Edward Lawrence Logan International Airport<br/>United Airlines<br/>Flight Number <strong>1008<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 11:53:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>Southwest Airlines<br/>Flight Number <strong>423<\\/strong>\\n  <br/>Departure Time 2023-01-20 11:05:00<br/> Arrvial Time 2023-01-20 12:40:00\",\"<strong>Burbank<\\/strong><br/>Bob Hope Airport<br/>United Airlines<br/>Flight Number <strong>5552<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:05:00<br/> Arrvial Time 2023-01-20 09:38:00\",\"<strong>Tucson<\\/strong><br/>Tucson International Airport<br/>United Airlines<br/>Flight Number <strong>5264<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:06:00<br/> Arrvial Time 2023-01-20 09:38:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Delta Air Lines<br/>Flight Number <strong>2888<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:20:00<br/> Arrvial Time 2023-01-20 09:36:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>Alaska Airlines<br/>Flight Number <strong>3372<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:40:00\",\"<strong>San Luis Obispo<\\/strong><br/>San Luis County Regional Airport<br/>United Airlines<br/>Flight Number <strong>4754<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:29:00<br/> Arrvial Time 2023-01-20 09:41:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Alaska Airlines<br/>Flight Number <strong>1166<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:35:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Alaska Airlines<br/>Flight Number <strong>1174<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Tel-aviv<\\/strong><br/>Ben Gurion International Airport<br/>United Airlines<br/>Flight Number <strong>955<\\/strong>\\n  <br/>Departure Time 2023-01-20 00:55:00<br/> Arrvial Time 2023-01-20 06:00:00\",\"<strong>Tucson<\\/strong><br/>Tucson International Airport<br/>United Airlines<br/>Flight Number <strong>5583<\\/strong>\\n  <br/>Departure Time 2023-01-20 12:54:00<br/> Arrvial Time 2023-01-20 14:26:00\",\"<strong>Tucson<\\/strong><br/>Tucson International Airport<br/>Air Canada<br/>Flight Number <strong>3770<\\/strong>\\n  <br/>Departure Time 2023-01-20 12:54:00<br/> Arrvial Time 2023-01-20 14:26:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>United Airlines<br/>Flight Number <strong>1760<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:19:00<br/> Arrvial Time 2023-01-20 12:11:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Alaska Airlines<br/>Flight Number <strong>2027<\\/strong>\\n  <br/>Departure Time 2023-01-20 12:00:00<br/> Arrvial Time 2023-01-20 13:44:00\",\"<strong>Cincinnati<\\/strong><br/>Cincinnati Northern Kentucky International Airport<br/>ABX Air<br/>Flight Number <strong>805<\\/strong>\\n  <br/>Departure Time 2023-01-20 05:17:00<br/> Arrvial Time 2023-01-20 07:08:00\",\"<strong>Santa Ana<\\/strong><br/>John Wayne Airport-Orange County Airport<br/>United Airlines<br/>Flight Number <strong>1872<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:45:00<br/> Arrvial Time 2023-01-20 08:29:00\",\"<strong>Santa Ana<\\/strong><br/>John Wayne Airport-Orange County Airport<br/>Virgin Australia<br/>Flight Number <strong>8499<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:45:00<br/> Arrvial Time 2023-01-20 08:29:00\",\"<strong>Santa Ana<\\/strong><br/>John Wayne Airport-Orange County Airport<br/>Air Canada<br/>Flight Number <strong>4134<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:45:00<br/> Arrvial Time 2023-01-20 08:29:00\",\"<strong>Burbank<\\/strong><br/>Bob Hope Airport<br/>SA AVIANCA<br/>Flight Number <strong>2347<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:05:00<br/> Arrvial Time 2023-01-20 09:38:00\",\"<strong>Spokane<\\/strong><br/>Spokane International Airport<br/>United Airlines<br/>Flight Number <strong>5319<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:14:00<br/> Arrvial Time 2023-01-20 09:48:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>United Airlines<br/>Flight Number <strong>5736<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:10:00<br/> Arrvial Time 2023-01-20 09:43:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>Virgin Australia<br/>Flight Number <strong>8447<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:10:00<br/> Arrvial Time 2023-01-20 09:43:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>ANA<br/>Flight Number <strong>7303<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:10:00<br/> Arrvial Time 2023-01-20 09:43:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>Air Canada<br/>Flight Number <strong>4393<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:10:00<br/> Arrvial Time 2023-01-20 09:43:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>Delta Air Lines<br/>Flight Number <strong>843<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:16:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Qatar Airways<br/>Flight Number <strong>2094<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Korean Air<br/>Flight Number <strong>6094<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>JAL<br/>Flight Number <strong>5416<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>American Airlines<br/>Flight Number <strong>7467<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Bakersfield<\\/strong><br/>Meadows Field<br/>Air New Zealand<br/>Flight Number <strong>9147<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:29:00<br/> Arrvial Time 2023-01-20 09:50:00\",\"<strong>Eugene<\\/strong><br/>Mahlon Sweet Field<br/>SA AVIANCA<br/>Flight Number <strong>2270<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:38:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>Delta Air Lines<br/>Flight Number <strong>2414<\\/strong>\\n  <br/>Departure Time 2023-01-20 11:20:00<br/> Arrvial Time 2023-01-20 12:30:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>4538<\\/strong>\\n  <br/>Departure Time 2023-01-20 11:20:00<br/> Arrvial Time 2023-01-20 12:30:00\",\"<strong>London<\\/strong><br/>London Heathrow Airport<br/>Brussels Airlines<br/>Flight Number <strong>9101<\\/strong>\\n  <br/>Departure Time 2023-01-20 09:20:00<br/> Arrvial Time 2023-01-20 12:30:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>JAL<br/>Flight Number <strong>5428<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:35:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>American Airlines<br/>Flight Number <strong>7511<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:35:00<br/> Arrvial Time 2023-01-20 09:45:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>WestJet<br/>Flight Number <strong>7548<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:20:00<br/> Arrvial Time 2023-01-20 09:36:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Korean Air<br/>Flight Number <strong>3083<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:20:00<br/> Arrvial Time 2023-01-20 09:36:00\",\"<strong>Salt Lake City<\\/strong><br/>Salt Lake City International Airport<br/>Qatar Airways<br/>Flight Number <strong>2972<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:45:00<br/> Arrvial Time 2023-01-20 10:00:00\",\"<strong>Auckland<\\/strong><br/>Auckland International Airport<br/>Lufthansa<br/>Flight Number <strong>9324<\\/strong>\\n  <br/>Departure Time 2023-01-20 15:50:00<br/> Arrvial Time 2023-01-20 07:05:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>SA AVIANCA<br/>Flight Number <strong>2150<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:15:00<br/> Arrvial Time 2023-01-20 09:50:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>Qatar Airways<br/>Flight Number <strong>2028<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:40:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>JAL<br/>Flight Number <strong>5461<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:40:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Alaska Airlines<br/>Flight Number <strong>1082<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:25:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Air Tahiti Nui<br/>Flight Number <strong>2650<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:25:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Korean Air<br/>Flight Number <strong>6113<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:25:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>American Airlines<br/>Flight Number <strong>7456<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:25:00\",\"<strong>Melbourne<\\/strong><br/>Melbourne International Airport<br/>United Airlines<br/>Flight Number <strong>61<\\/strong>\\n  <br/>Departure Time 2023-01-20 13:00:00<br/> Arrvial Time 2023-01-20 08:25:00\",\"<strong>Melbourne<\\/strong><br/>Melbourne International Airport<br/>Virgin Australia<br/>Flight Number <strong>8003<\\/strong>\\n  <br/>Departure Time 2023-01-20 13:00:00<br/> Arrvial Time 2023-01-20 08:25:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>United Airlines<br/>Flight Number <strong>2017<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:01:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>Virgin Australia<br/>Flight Number <strong>8433<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:01:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>ANA<br/>Flight Number <strong>7301<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:01:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>Air Canada<br/>Flight Number <strong>5312<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 08:01:00\",\"<strong>San Diego<\\/strong><br/>San Diego International Airport<br/>Alaska Airlines<br/>Flight Number <strong>3310<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 07:56:00\",\"<strong>Osaka<\\/strong><br/>Kansai International Airport<br/>United Airlines<br/>Flight Number <strong>34<\\/strong>\\n  <br/>Departure Time 2023-01-20 18:25:00<br/> Arrvial Time 2023-01-20 11:20:00\",\"<strong>Boston<\\/strong><br/>General Edward Lawrence Logan International Airport<br/>JetBlue Airways<br/>Flight Number <strong>1833<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:00:00<br/> Arrvial Time 2023-01-20 13:54:00\",\"<strong>Cleveland<\\/strong><br/>Cleveland Hopkins International Airport<br/>Air New Zealand<br/>Flight Number <strong>9045<\\/strong>\\n  <br/>Departure Time 2023-01-20 07:00:00<br/> Arrvial Time 2023-01-20 09:37:00\",\"<strong>Atlanta<\\/strong><br/>Hartsfield Jackson Atlanta International Airport<br/>Aerolineas Argentinas<br/>Flight Number <strong>7024<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:20:00<br/> Arrvial Time 2023-01-20 10:50:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>United Airlines<br/>Flight Number <strong>2652<\\/strong>\\n  <br/>Departure Time 2023-01-20 09:14:00<br/> Arrvial Time 2023-01-20 11:35:00\",\"<strong>Louisville<\\/strong><br/>Louisville International Standiford Field<br/>Breeze Airways<br/>Flight Number <strong>228<\\/strong>\\n  <br/>Departure Time 2023-01-20 09:45:00<br/> Arrvial Time 2023-01-20 11:37:00\",\"<strong>Las Vegas<\\/strong><br/>McCarran International Airport<br/>ANA<br/>Flight Number <strong>7309<\\/strong>\\n  <br/>Departure Time 2023-01-20 08:00:00<br/> Arrvial Time 2023-01-20 09:42:00\",\"<strong>Seattle<\\/strong><br/>Seattle Tacoma International Airport<br/>Alaska Airlines<br/>Flight Number <strong>1132<\\/strong>\\n  <br/>Departure Time 2023-01-20 09:20:00<br/> Arrvial Time 2023-01-20 11:32:00\",\"<strong>Seoul<\\/strong><br/>Incheon International Airport<br/>United Airlines<br/>Flight Number <strong>892<\\/strong>\\n  <br/>Departure Time 2023-01-20 18:00:00<br/> Arrvial Time 2023-01-20 11:30:00\",\"<strong>Newark<\\/strong><br/>Newark Liberty International Airport<br/>United Airlines<br/>Flight Number <strong>788<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 09:33:00\",\"<strong>New Orleans<\\/strong><br/>Louis Armstrong New Orleans International Airport<br/>United Airlines<br/>Flight Number <strong>1687<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:36:00<br/> Arrvial Time 2023-01-20 09:35:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Air Canada<br/>Flight Number <strong>3340<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:19:00<br/> Arrvial Time 2023-01-20 12:11:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Lufthansa<br/>Flight Number <strong>9235<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:19:00<br/> Arrvial Time 2023-01-20 12:11:00\",\"<strong>Portland<\\/strong><br/>Portland International Airport<br/>Air New Zealand<br/>Flight Number <strong>9350<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:19:00<br/> Arrvial Time 2023-01-20 12:11:00\",\"<strong>Fresno<\\/strong><br/>Fresno Yosemite International Airport<br/>Air Canada<br/>Flight Number <strong>4333<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:40:00<br/> Arrvial Time 2023-01-20 07:50:00\",\"<strong>Santa Ana<\\/strong><br/>John Wayne Airport-Orange County Airport<br/>Lufthansa<br/>Flight Number <strong>9239<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:47:00<br/> Arrvial Time 2023-01-20 12:20:00\",\"<strong>Newark<\\/strong><br/>Newark Liberty International Airport<br/>Virgin Australia<br/>Flight Number <strong>8159<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:15:00<br/> Arrvial Time 2023-01-20 09:33:00\",\"<strong>Santa Ana<\\/strong><br/>John Wayne Airport-Orange County Airport<br/>Air Canada<br/>Flight Number <strong>4589<\\/strong>\\n  <br/>Departure Time 2023-01-20 10:47:00<br/> Arrvial Time 2023-01-20 12:20:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Alaska Airlines<br/>Flight Number <strong>3398<\\/strong>\\n  <br/>Departure Time 2023-01-20 09:30:00<br/> Arrvial Time 2023-01-20 10:57:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Alaska Airlines<br/>Flight Number <strong>1175<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:27:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Air Tahiti Nui<br/>Flight Number <strong>2522<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:27:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Delta Air Lines<br/>Flight Number <strong>2614<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:26:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>WestJet<br/>Flight Number <strong>6866<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:26:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Virgin Atlantic<br/>Flight Number <strong>4109<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:26:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Korean Air<br/>Flight Number <strong>7263<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:26:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>China Airlines<br/>Flight Number <strong>9868<\\/strong>\\n  <br/>Departure Time 2023-01-20 06:00:00<br/> Arrvial Time 2023-01-20 07:26:00\",\"<strong>Los Angeles<\\/strong><br/>Los Angeles International Airport<br/>Southwest Airlines<br/>Flight Number <strong>695<\\/strong>\\n  <br/>Departure Time 2023-01-20 05:55:00<br/> Arrvial Time 2023-01-20 07:25:00\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[-37.673302,51.4706],\"lng\":[-123.21199798584,174.792007446]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/jquery-1.12.4/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\r\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\r\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\r\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/leaflet-binding-2.1.1/leaflet.js\"></script>\r\n<link href=\"../../site_libs/leaflet-markercluster-1.0.5/MarkerCluster.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/leaflet-markercluster-1.0.5/MarkerCluster.Default.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/leaflet-markercluster-1.0.5/leaflet.markercluster.js\"></script>\r\n<script src=\"../../site_libs/leaflet-markercluster-1.0.5/leaflet.markercluster.freezable.js\"></script>\r\n<script src=\"../../site_libs/leaflet-markercluster-1.0.5/leaflet.markercluster.layersupport.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}